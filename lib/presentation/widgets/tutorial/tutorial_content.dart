import 'package:material_symbols_icons/symbols.dart';
import 'tutorial_overlay.dart';

/// Contenido del tutorial para cada paso del wizard de creaci√≥n de servicios
class TutorialContent {
  
  /// Tutorial para el paso 1: Categor√≠a
  static const TutorialStep categoryStep = TutorialStep(
    title: 'üéØ Selecciona tu categor√≠a',
    description: 'Aqu√≠ debes elegir la categor√≠a que mejor describe tu servicio. Esto ayudar√° a los clientes a encontrarte m√°s f√°cilmente.',
    tips: [
      'Elige la categor√≠a m√°s espec√≠fica posible',
      'Los clientes buscan por categor√≠as',
      'Una buena categor√≠a aumenta tu visibilidad',
    ],
    icon: Symbols.category,
  );

  /// Tutorial para el paso 2: Informaci√≥n b√°sica
  static const TutorialStep basicInfoStep = TutorialStep(
    title: 'üìù Informaci√≥n b√°sica',
    description: 'Aqu√≠ escribes el t√≠tulo y descripci√≥n de tu servicio. Un buen t√≠tulo y descripci√≥n atraen m√°s clientes.',
    tips: [
      'Usa un t√≠tulo claro y descriptivo',
      'La descripci√≥n debe explicar qu√© incluye tu servicio',
      'Menciona tu experiencia y ventajas',
      'M√≠nimo 20 caracteres en la descripci√≥n',
    ],
    icon: Symbols.edit_note,
  );

  /// Tutorial para el paso 3: Precio
  static const TutorialStep pricingStep = TutorialStep(
    title: 'üí∞ Define tu precio',
    description: 'Establece c√≥mo vas a cobrar tu servicio. Puedes poner un precio fijo, por d√≠a, o negociable.',
    tips: [
      'Investiga precios de la competencia',
      'Considera tus costos y tiempo',
      'El precio negociable atrae m√°s consultas',
      'Los precios claros generan m√°s confianza',
    ],
    icon: Symbols.payments,
  );

  /// Tutorial para el paso 4: Imagen principal
  static const TutorialStep mainImageStep = TutorialStep(
    title: 'üì∏ Imagen principal',
    description: 'Sube una imagen que represente tu servicio. Esta ser√° la primera imagen que vean los clientes.',
    tips: [
      'Usa im√°genes de alta calidad',
      'Muestra tu trabajo terminado',
      'Evita im√°genes borrosas o oscuras',
      'La imagen debe relacionarse con tu servicio',
    ],
    icon: Symbols.image,
  );

  /// Tutorial para el paso 5: Experiencia
  static const TutorialStep experienceStep = TutorialStep(
    title: '‚≠ê Tu experiencia',
    description: 'Cu√©ntales a los clientes sobre tu experiencia y trayectoria. Esto genera confianza y credibilidad.',
    tips: [
      'Menciona a√±os de experiencia',
      'Habla de trabajos importantes',
      'Incluye certificaciones si las tienes',
      'Este paso es opcional pero muy valioso',
    ],
    icon: Symbols.star,
  );

  /// Tutorial para el paso 6: Contacto
  static const TutorialStep contactStep = TutorialStep(
    title: 'üì± Informaci√≥n de contacto',
    description: 'Agrega formas adicionales para que te contacten. M√°s opciones de contacto = m√°s oportunidades.',
    tips: [
      'WhatsApp es muy usado en Colombia',
      'Agrega tel√©fonos fijos si tienes',
      'Las redes sociales muestran profesionalismo',
      'Todos los campos son opcionales',
    ],
    icon: Symbols.contact_phone,
  );

  /// Tutorial para el paso 7: Disponibilidad
  static const TutorialStep availabilityStep = TutorialStep(
    title: 'üìÖ D√≠as disponibles',
    description: 'Selecciona los d√≠as que puedes trabajar. Los clientes sabr√°n cu√°ndo pueden contactarte.',
    tips: [
      'Selecciona todos los d√≠as que trabajas',
      'Puedes coordinar horarios espec√≠ficos despu√©s',
      'M√°s d√≠as disponibles = m√°s oportunidades',
      'Este paso es opcional',
    ],
    icon: Symbols.schedule,
  );

  /// Tutorial para el paso 8: Habilidades especiales
  static const TutorialStep skillsStep = TutorialStep(
    title: 'üèÜ Habilidades especiales',
    description: 'Selecciona caracter√≠sticas que te destaquen. Tambi√©n puedes agregar habilidades personalizadas.',
    tips: [
      'Selecciona lo que realmente ofreces',
      'Las garant√≠as dan confianza',
      'Agrega habilidades √∫nicas en el campo personalizado',
      'No exageres, s√© honesto',
    ],
    icon: Symbols.verified,
  );

  /// Tutorial para el paso 9: Im√°genes adicionales
  static const TutorialStep additionalImagesStep = TutorialStep(
    title: 'üñºÔ∏è Galer√≠a de trabajos',
    description: 'Sube hasta 6 im√°genes de trabajos anteriores. Esto demuestra la calidad de tu trabajo.',
    tips: [
      'M√°ximo 6 im√°genes adicionales',
      'Muestra trabajos terminados',
      'Usa im√°genes desde diferentes √°ngulos',
      'Este paso es opcional pero muy recomendado',
    ],
    icon: Symbols.photo_library,
  );

  /// Tutorial para el paso 10: Ubicaci√≥n
  static const TutorialStep locationStep = TutorialStep(
    title: 'üìç Ubicaci√≥n y modalidad',
    description: 'Define d√≥nde ofreces tu servicio: a domicilio, en tu local, o ambos. Tambi√©n puedes agregar tu direcci√≥n.',
    tips: [
      'El mapa te ayuda a ser m√°s preciso',
      'A domicilio es muy solicitado',
      'Si tienes local, agr√©galo como opci√≥n',
      'La ubicaci√≥n ayuda a clientes cercanos',
    ],
    icon: Symbols.location_on,
  );

  /// Tutorial para el paso 11: Resumen
  static const TutorialStep summaryStep = TutorialStep(
    title: '‚úÖ ¬°Casi listo!',
    description: 'Aqu√≠ puedes revisar toda la informaci√≥n antes de publicar tu servicio. Verifica que todo est√© correcto.',
    tips: [
      'Revisa que toda la informaci√≥n sea correcta',
      'Tu servicio ser√° visible inmediatamente',
      'Podr√°s editarlo despu√©s si necesitas cambios',
    ],
    icon: Symbols.check_circle,
  );

  /// Lista de todos los pasos del tutorial en orden
  static const List<TutorialStep> allSteps = [
    categoryStep,        // Paso 1
    basicInfoStep,       // Paso 2
    pricingStep,         // Paso 3
    mainImageStep,       // Paso 4
    experienceStep,      // Paso 5
    contactStep,         // Paso 6
    availabilityStep,    // Paso 7
    skillsStep,          // Paso 8
    additionalImagesStep,// Paso 9
    locationStep,        // Paso 10
    summaryStep,         // Paso 11
  ];

  /// Obtiene el tutorial para un paso espec√≠fico
  static TutorialStep? getStepTutorial(int stepIndex) {
    if (stepIndex >= 0 && stepIndex < allSteps.length) {
      return allSteps[stepIndex];
    }
    return null;
  }
}
